spring:
  # Base de datos H2 deshabilitada. Usar la configuraci√≥n MySQL del properties original.
  # datasource:
  #   url: ${SPRING_DATASOURCE_URL:jdbc:h2:mem:analytics;DB_CLOSE_DELAY=-1;MODE=MySQL}
  #   driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.h2.Driver}
  #   username: ${SPRING_DATASOURCE_USERNAME:sa}
  #   password: ${SPRING_DATASOURCE_PASSWORD:}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: ${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:false}
  datasource:
    url: jdbc:mysql://${DB_URL}/${DB_SCHEMA}
    username: ${DB_USR}
    password: ${DB_PASSWORD}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP:localhost:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:analitica-ms}
      auto-offset-reset: ${KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}
      enable-auto-commit: ${KAFKA_CONSUMER_ENABLE_AUTO_COMMIT:true}

analitica:
  kafka:
    inventario:
      topic: ${INVENTARIO_TOPIC:inventario}
      concurrency: ${INVENTARIO_CONCURRENCY:1}
    ventas:
      topic: ${VENTAS_TOPIC:ventas}
      concurrency: ${VENTAS_CONCURRENCY:1}
    dlq:
      enabled: ${DLQ_ENABLED:false}
      topicSuffix: ${DLQ_SUFFIX:.dlq}
  ack:
    enabled: ${ANALYTICS_ACK_ENABLED:true}
    url: ${ACK_URL:http://localhost:8080/events/ack}

analytics:
  kafka:
    enabled: ${ANALYTICS_KAFKA_ENABLED:true}
  ack:
    enabled: ${ANALYTICS_ACK_ENABLED:true}
    auth:
      enabled: ${ANALYTICS_ACK_AUTH_ENABLED:true}
    retry:
      cron: ${ANALYTICS_ACK_RETRY_CRON:0 */1 * * * *}

communication:
  intermediary:
    url: ${CORE_API_URL:http://localhost:8090}

keycloak:
  token:
    url: ${KEYCLOAK_TOKEN_URL:http://localhost:8080/realms/ecommerce/protocol/openid-connect/token}
  client-id: ${KEYCLOAK_CLIENT_ID:analytics-app}
  client-secret: ${KEYCLOAK_CLIENT_SECRET:O4Nki7ZVyaiW9EGgf2y8h6ThQJmoMles}

http:
  client:
    connect-timeout-ms: ${HTTP_CONNECT_TIMEOUT_MS:5000}
    read-timeout-ms: ${HTTP_READ_TIMEOUT_MS:10000}

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics,prometheus}

server:
  port: ${SERVER_PORT:8085}
  servlet:
    context-path: /api
  forward-headers-strategy: framework

logging:
  level:
    org.springframework.kafka: ${LOG_LEVEL_SPRING_KAFKA:WARN}
    ar.edu.uade.analytics.kafka: ${LOG_LEVEL_ANALYTICS_KAFKA:WARN}
    ar.edu.uade.analytics.messaging: ${LOG_LEVEL_ANALYTICS_MESSAGING:WARN}
    org.hibernate.SQL: ${LOG_LEVEL_HIBERNATE_SQL:WARN}
    org.hibernate.orm.jdbc.bind: ${LOG_LEVEL_HIBERNATE_BIND:WARN}
