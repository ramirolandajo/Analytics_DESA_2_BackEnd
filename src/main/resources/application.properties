spring.application.name=Analytics

# Configuracion de Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=analytics-mock-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Base de datos
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Puerto
server.port=8081

jwt.secret=f7423af3-3f98-45b8-8677-65ae96b45cde

#produccion CON variable de entorno AWS
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.url=jdbc:mysql://${DB_URLPROD}/analytics_prod
spring.datasource.username=${DB_USR}
spring.datasource.password=${DB_PASSWORD}

#developer CON variable de entorno AWS
#spring.jpa.properties.hibernate.format_sql=true
#spring.datasource.url=jdbc:mysql://${DB_URLDEV}/analytics_dev
#spring.datasource.username=${DB_USR}
#spring.datasource.password=${DB_PASSWORD}